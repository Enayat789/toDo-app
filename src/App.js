// import Navbar from "./Components/Navbar/Navbar";
import React, { useState } from "react";
import { v4 as uuidv4 } from "uuid";

function App() {
  const [todo, setTodo] = useState(""); // State for holding the current todo item being added
  const [todos, setTodos] = useState([]); // State for holding the list of todo items

  const handleEdith = () => {};

  // Function to handle deletion of a todo item
  const handleDelete = (id) => {
    setTodos(todos.filter((item) => item.id !== id));
  };

  // Function to handle addition of a new todo item
  const handleAdd = () => {
    // Add a new todo item to the todos array with a unique id generated by uuidv4
    setTodos([...todos, { id: uuidv4(), todo, isCompleted: false }]);
    setTodo("");
  };

  // Function to handle changes in the todo input field
  const handleChange = (e) => {
    setTodo(e.target.value);
  };

  // Function to toggle the completion status of a todo item
  const handleToggleComplete = (id) => {
    // Map over the todos array
    setTodos(
      todos.map((item) =>
        item.id === id ? { ...item, isCompleted: !item.isCompleted } : item
      )
    );
  };

  return (
    <>
      {/* <Navbar /> */}

      {/* Main container for the todo list */}
      <div className="container flex flex-col items-center mx-auto my-5 p-5 rounded-xl bg-purple-100 min-h-[90vh] gap-4">
        <h2 className=" font-bold text-2xl font-mono underline">ADD A TODO</h2>
        <div className="add-todo flex mt-4 items-center justify-between">
          <input
            type="text"
            className=" w-[500px] outline-none p-3 rounded-md "
            onChange={handleChange}
            value={todo}
          />
          <button
            className=" bg-purple-500 p-4 py-3  ml-6 rounded-md text-white hover:bg-purple-600"
            onClick={handleAdd}
          >
            Add
          </button>
        </div>

        <h2 className=" text-lg font-semibold font-mono">Your Todos</h2>

        {/* Container for displaying all todos */}
        <div className="allTodos flex flex-col items-center justify-center w-full gap-2">
          {/* Mapping over todos array  */}
          {todos.map((item) => {
            return (
              <div
                key={item.id}
                className={`todo flex flex-row bg-violet-200 rounded-md w-[580px] p-2 py-4 items-center justify-between ${
                  item.isCompleted ? "completed" : ""
                }`}
              >
                <input
                  type="checkbox"
                  checked={item.isCompleted}
                  onChange={() => handleToggleComplete(item.id)}
                />
                <div
                  className={`flex items-start w-[68%] p-2 overflow-scroll ${
                    item.isCompleted ? "line-through" : ""
                  }`}
                >
                  {item.todo}
                </div>
                <div className="buttons flex">
                  <button
                    className=" bg-purple-500 p-3 py-2  mx-2 rounded-md text-white hover:bg-purple-600"
                    onClick={handleEdith}
                  >
                    Edit
                  </button>
                  <button
                    className=" bg-purple-500 p-3 py-2  mx-2 rounded-md text-white hover:bg-purple-600"
                    onClick={() => handleDelete(item.id)}
                  >
                    Delete
                  </button>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </>
  );
}

export default App;
